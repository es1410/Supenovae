import matplotlib.pyplot as plt
import numpy as np
import snpy
import sys

if '/home/es2y14/scripts/' not in sys.path:
    sys.path.append('/home/es2y14/scripts/')  ##Append Scripts Dir

from testing_loop import *

## Effective wavelengths taken from CSP website
u = 3639.3 
g = 4765.1 
r = 6223.3 
i = 7609.2 
B = 4350.6 
V = 5401.4 
y = 10350.8 
j = 12386.5 
h = 16297.7 
k = 21422.2

def calculate_extinction_loop(band1, band2 ,R_v): 
    aux = band1/10000.0
    x = 1/aux
    
    if (x<1.1) and (x>=0.3):
        a = 0.574*(x**1.61)
        b = -0.527*(x**1.61)

    elif (x <= 3.3) and (x >= 1.1):
        y=(x-1.82)
        a=1.0 + 0.17699*y - 0.50447*(y**2) - 0.02427*(y**3) + 0.72085*(y**4) + 0.01979*(y**5) - 0.77530*(y**6) + 0.32999*(y**7)
        b=1.41338*y + 2.28305*(y**2) + 1.07233*(y**3) - 5.38434*(y**4) - 0.62251*(y**5) + 5.30260*(y**6) - 2.09002*(y**7)

    extinction_law_band1 = (a-b/R_v)   #extinction correction for first band

    aux1 = band2/10000.0
    x1 = 1/aux1
    
    if (x1<1.1) and (x1>=0.3):
        a1 = 0.574*(x1**1.61)
        b1 = -0.527*(x1**1.61)

    elif (x1 <= 3.3) and (x1 >= 1.1):
        y1=(x1-1.82)
        a1=1.0 + 0.17699*y1 - 0.50447*(y1**2) - 0.02427*(y1**3) + 0.72085*(y1**4) + 0.01979*(y1**5) - 0.77530*(y1**6) + 0.32999*(y1**7)
        b1=1.41338*y1 + 2.28305*(y1**2) + 1.07233*(y1**3) - 5.38434*(y1**4) - 0.62251*(y1**5) + 5.30260*(y1**6) - 2.09002*(y1**7)

   
    extinction_law_band2 = (a1-b1/R_v)  #extinction correction for second band

   
    for sn in data_opt.keys():
        s = snpy.get_sn('/home/es2y14/snpyfiles/snpyfits/optical_1/SN'+sn)
        EBV_host = s.parameters['EBVhost']
        EBV_mw = s.EBVgal
        A_v = s.Rv_gal*(EBV_host+EBV_mw)
        extinct_corr =  A_v*(extinction_law_band1-extinction_law_band2)
        print sn, extinct_corr
    return extinction_law_band2, extinction_law_band1
   

def calculate_extinction(band1 = False, band2 = False, R_v = False, sn = False): 
    """
    inputs:

    -------
    outputs:

    """
    
    if not (band1 and band2 and R_v and sn):
        print 'One or more variables have not been supplied'
        return False

    u = 3639.3 #effective wavelength of the U band(A), taken from CSP website 
    g = 4765.1 #effective wavelength of the g band(A), taken from CSP website
    r = 6223.3 #effective wavelength of the r band(A), taken from CSP website
    i = 7609.2 #effective wavelength of the i band(A), taken from CSP website
    B = 4350.6 #effective wavelength of the B band(A), taken from CSP website
    V = 5375.2 #effective wavelength of the V band(A), taken from CSP website
    y = 10350.8 #effective wavelength of the Y band(A), taken from CSP website
    j = 12386.5 #effective wavelength of the J band(A), taken from CSP website
    h = 16297.7 #effective wavelength of the H band(A), taken from CSP website
    k = 21422.2 #effective wavelength of the K band(A), taken from CSP website
    
    lam_effective = {'u': u, 'g': g, 'r': r, 'i': i, 'B': B, 'V': V, 'y' : y, 'j': j, 'h': h, 'k': k}
    
    if band1 not in lam_effective.keys():
        print 'Band1 filter does not exist in this dict'
        return False
    if band2 not in lam_effective.keys():
        print 'Band2 filter does not exist in this dict'
        return False
    
    band1 = lam_effective[band1]
    band2 = lam_effective[band2]
    
    aux = band1/10000.0
    x = 1/aux
    
    if (x<1.1) and (x>=0.3):
        a = 0.574*(x**1.61)
        b = -0.527*(x**1.61)

    elif (x <= 3.3) and (x >= 1.1):
        y=(x-1.82)
        a=1.0 + 0.17699*y - 0.50447*(y**2) - 0.02427*(y**3) + 0.72085*(y**4) + 0.01979*(y**5) - 0.77530*(y**6) + 0.32999*(y**7)
        b=1.41338*y + 2.28305*(y**2) + 1.07233*(y**3) - 5.38434*(y**4) - 0.62251*(y**5) + 5.30260*(y**6) - 2.09002*(y**7)

    extinction_law_band1 = (a-b/R_v)   #extinction correction for first band

    aux1 = band2/10000.0
    x1 = 1/aux1

    if (x1<1.1) and (x1>=0.3):
        a1 = 0.574*(x1**1.61)
        b1 = -0.527*(x1**1.61)

    elif (x1 <= 3.3) and (x1 >= 1.1):
        y1=(x1-1.82)
        a1=1.0 + 0.17699*y1 - 0.50447*(y1**2) - 0.02427*(y1**3) + 0.72085*(y1**4) + 0.01979*(y1**5) - 0.77530*(y1**6) + 0.32999*(y1**7)
        b1=1.41338*y1 + 2.28305*(y1**2) + 1.07233*(y1**3) - 5.38434*(y1**4) - 0.62251*(y1**5) + 5.30260*(y1**6) - 2.09002*(y1**7)

   
    extinction_law_band2 = (a1-b1/R_v)  #extinction correction for second band
 
    s = snpy.get_sn('/home/es2y14/snpyfiles/snpyfits/optical_1/SN'+sn)
    EBV_host = s.parameters['EBVhost']
    EBV_mw = s.EBVgal
    A_v = s.Rv_gal*(EBV_host+EBV_mw)
    extinct_corr =  A_v*(extinction_law_band1-extinction_law_band2)
    
    print 'WAHEY!'    
    print sn, extinct_corr
    
    return extinct_corr
